name: "Production"
on:
  push:
    branches:
      - master
    paths:
      - 'labshare-client/**'
      - '.github/**'
  pull_request:
    branches:
      - master
    paths:
      - 'labshare-client/**'
      - '.github/**'
  

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: cd labshare-client && npm install
      - run: cd labshare-client && npm run build


  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        if: github.event.pull_request.merged == true || github.event_name == 'push'
      - name: "Build and Push Docker Image"
        uses: docker/build-push-action@v1
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: labhive/labhive
          tags: production
          path: ./labshare-client
          dockerfile: ./labshare-client/Dockerfile
      - name: "Deploy"
        uses: appleboy/ssh-action@master
        if: github.event.pull_request.merged == true || github.event_name == 'push'
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd LabHive/labshare-client;
            git reset --hard;
            git pull;

            docker volume create labhive_secret_production;
            docker run --rm -v $(pwd):/src -v labhive_secret_production:/dst busybox cp -r /src/secret/. /dst/;

            if ! docker service ls | grep -q LabHiveProduction; then
              docker stack deploy -c docker-compose.production.yml LabHiveProduction
              until [[ ! -z $(docker stack ps LabHiveProduction -q) ]]; do sleep 1; done
            else
              docker service update --image labhive/labhive:production LabHiveProduction_app
            fi

            if ! docker run --rm -v $(pwd):/app -w /app --network LabHiveProduction_network -e "PRODUCTION=1" node /bin/bash -c "npm i && npm run migrations up"; then
              docker run --rm -v $(pwd):/app -w /app --network LabHiveProduction_network -e "PRODUCTION=1" node npm run migrations down || true;
              docker service rollback LabHiveProduction_app;
              exit 1;
            fi
